<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r20190319">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="vaadin.uiId" elementType="Argument">
            <stringProp name="Argument.name">vaadin.uiId</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vaadin.syncId" elementType="Argument">
            <stringProp name="Argument.name">vaadin.syncId</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vaadin.clientId" elementType="Argument">
            <stringProp name="Argument.name">vaadin.clientId</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <cz.etnetera.jmeter.threads.DistributedConcurrencyThreadGroup guiclass="cz.etnetera.jmeter.threads.gui.DistributedConcurrencyThreadGroupGui" testclass="cz.etnetera.jmeter.threads.DistributedConcurrencyThreadGroup" testname="VirtualUsers" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <stringProp name="TargetLevel">1</stringProp>
        <stringProp name="RampUp">0</stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">10</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
        <stringProp name="DistributedConcurrencyThreadGroup.selectiveGenerators"></stringProp>
      </cz.etnetera.jmeter.threads.DistributedConcurrencyThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults http://localhost:8080" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="001_localhost:8080" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="001 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="005 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v-browserDetails" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-browserDetails</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="theme" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">theme</stringProp>
                  <stringProp name="Argument.value">mytheme</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-appId</stringProp>
                  <stringProp name="Argument.value">ROOT-2521314</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-sh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-sh</stringProp>
                  <stringProp name="Argument.value">1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-sw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-sw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-cw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-cw</stringProp>
                  <stringProp name="Argument.value">1547</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-ch</stringProp>
                  <stringProp name="Argument.value">730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-curdate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-curdate</stringProp>
                  <stringProp name="Argument.value">1605021708669</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-tzo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-tzo</stringProp>
                  <stringProp name="Argument.value">-60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-dstd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-dstd</stringProp>
                  <stringProp name="Argument.value">60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-rtzo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-rtzo</stringProp>
                  <stringProp name="Argument.value">-60</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-dston" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-dston</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-tzid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v-tzid</stringProp>
                  <stringProp name="Argument.value">Europe/Prague</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-vw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-vw</stringProp>
                  <stringProp name="Argument.value">1547</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-vh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-vh</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-loc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v-loc</stringProp>
                  <stringProp name="Argument.value">http://localhost:8080/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v-wn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v-wn</stringProp>
                  <stringProp name="Argument.value">ROOT-2521314-0.3159432979648469</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/?v-1605021708669</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="012 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;0&quot;,&quot;com.vaadin.shared.ui.ui.UIServerRpc&quot;,&quot;resize&quot;,[1547,730,1547,730]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId},&quot;wsver&quot;:&quot;8.12.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="014 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;0&quot;,&quot;com.vaadin.shared.ui.ui.UIServerRpc&quot;,&quot;resize&quot;,[1547,730,1547,730]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <cz.etnetera.jmeter.control.StaticResourcesTransactionController guiclass="cz.etnetera.jmeter.control.gui.StaticResourcesTransactionControllerGui" testclass="cz.etnetera.jmeter.control.StaticResourcesTransactionController" testname="http-localhost-Resources" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </cz.etnetera.jmeter.control.StaticResourcesTransactionController>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Static Resources list" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="001_localhost_8080-http-localhost_1" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_1</stringProp>
                  <stringProp name="Argument.value">/VAADIN/vaadinBootstrap.js?v=8.12.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_2" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_2</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/mytheme/styles.css?v=8.12.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_3" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_3</stringProp>
                  <stringProp name="Argument.value">/VAADIN/widgetsets/com.vaadin.DefaultWidgetSet/com.vaadin.DefaultWidgetSet.nocache.js?1605021708668</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_4" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_4</stringProp>
                  <stringProp name="Argument.value">/VAADIN/widgetsets/com.vaadin.DefaultWidgetSet/68879622C599FE6D0FFDE267BDB260B9.cache.js</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_5" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_5</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/shared/img/spinner.gif</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_6" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_6</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/fonts/open-sans/OpenSans-Light-webfont.woff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_7" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_7</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/fonts/open-sans/OpenSans-Regular-webfont.woff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_8" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_8</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/fonts/fontawesome-webfont/fontawesome-webfont.woff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_9" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_9</stringProp>
                  <stringProp name="Argument.value">/VAADIN/widgetsets/com.vaadin.DefaultWidgetSet/deferredjs/68879622C599FE6D0FFDE267BDB260B9/8.cache.js</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="001_localhost_8080-http-localhost_10" elementType="Argument">
                  <stringProp name="Argument.name">001_localhost_8080-http-localhost_10</stringProp>
                  <stringProp name="Argument.value">/VAADIN/widgetsets/com.vaadin.DefaultWidgetSet/deferredjs/68879622C599FE6D0FFDE267BDB260B9/2.cache.js</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Static Resources iterator" enabled="true">
              <stringProp name="ForeachController.inputVal">001_localhost_8080-http-localhost</stringProp>
              <stringProp name="ForeachController.returnVal">001_localhost_8080-http-localhost-URL</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${001_localhost_8080-http-localhost-URL}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${001_localhost_8080-http-localhost-URL}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://localhost:8080/</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <cz.etnetera.jmeter.timer.sampler.ThinkTime guiclass="cz.etnetera.jmeter.timer.sampler.gui.ThinkTimeGui" testclass="cz.etnetera.jmeter.timer.sampler.ThinkTime" testname="ThinkTime" enabled="true">
          <stringProp name="ThinkTime.duration">12000</stringProp>
          <boolProp name="ThinkTime.random">true</boolProp>
          <stringProp name="ThinkTime.min">75</stringProp>
          <stringProp name="ThinkTime.max">125</stringProp>
        </cz.etnetera.jmeter.timer.sampler.ThinkTime>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="002_filter" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="015 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;4&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;martin&quot;,6]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="016 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;10&quot;,&quot;com.vaadin.shared.data.selection.SelectionServerRpc&quot;,&quot;select&quot;,[&quot;31&quot;]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.25" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.25</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{&quot;locale&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.20" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.20</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{[^}]*&quot;caption&quot;:&quot;First name&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.23" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.23</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{[^}]*&quot;caption&quot;:&quot;Status&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.27" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.27</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{[^}]*&quot;caption&quot;:&quot;Save&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.21" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.21</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{[^}]*&quot;caption&quot;:&quot;Last name&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="vaadin.cid.22" enabled="true">
              <stringProp name="RegexExtractor.refname">vaadin.cid.22</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(\d+)&quot;:\{[^}]*&quot;caption&quot;:&quot;Email&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="RegexExtractor.default">REGEX FAILED !!</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="019 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;6/29/13&quot;,{&quot;YEAR&quot;:2013,&quot;MONTH&quot;:6,&quot;DAY&quot;:29}]],[&quot;${vaadin.cid.20}&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;Lara&quot;,0]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <cz.etnetera.jmeter.control.StaticResourcesTransactionController guiclass="cz.etnetera.jmeter.control.gui.StaticResourcesTransactionControllerGui" testclass="cz.etnetera.jmeter.control.StaticResourcesTransactionController" testname="http-localhost-Resources" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </cz.etnetera.jmeter.control.StaticResourcesTransactionController>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Static Resources list" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="002_filter-http-localhost_1" elementType="Argument">
                  <stringProp name="Argument.name">002_filter-http-localhost_1</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/fonts/themeicons-webfont/themeicons-webfont.woff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="002_filter-http-localhost_2" elementType="Argument">
                  <stringProp name="Argument.name">002_filter-http-localhost_2</stringProp>
                  <stringProp name="Argument.value">/VAADIN/themes/valo/fonts/open-sans/OpenSans-Semibold-webfont.woff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Static Resources iterator" enabled="true">
              <stringProp name="ForeachController.inputVal">002_filter-http-localhost</stringProp>
              <stringProp name="ForeachController.returnVal">002_filter-http-localhost-URL</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${002_filter-http-localhost-URL}" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port">80</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${002_filter-http-localhost-URL}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://localhost:8080/VAADIN/themes/mytheme/styles.css?v=8.12.0</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <cz.etnetera.jmeter.timer.sampler.ThinkTime guiclass="cz.etnetera.jmeter.timer.sampler.gui.ThinkTimeGui" testclass="cz.etnetera.jmeter.timer.sampler.ThinkTime" testname="ThinkTime" enabled="true">
          <stringProp name="ThinkTime.duration">0</stringProp>
          <boolProp name="ThinkTime.random">true</boolProp>
          <stringProp name="ThinkTime.min">75</stringProp>
          <stringProp name="ThinkTime.max">125</stringProp>
        </cz.etnetera.jmeter.timer.sampler.ThinkTime>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="003_edit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="020 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.23}&quot;,&quot;com.vaadin.shared.data.selection.SelectionServerRpc&quot;,&quot;select&quot;,[&quot;2&quot;]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="021 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;5/27/13&quot;,{&quot;YEAR&quot;:2013,&quot;MONTH&quot;:5,&quot;DAY&quot;:27}]],[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;update&quot;,[null,[]]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="022 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;5/27/13&quot;,{&quot;YEAR&quot;:2013,&quot;MONTH&quot;:5,&quot;DAY&quot;:27}]],[&quot;${vaadin.cid.27}&quot;,&quot;com.vaadin.shared.ui.button.ButtonServerRpc&quot;,&quot;click&quot;,[{&quot;altKey&quot;:false,&quot;button&quot;:&quot;LEFT&quot;,&quot;clientX&quot;:1355,&quot;clientY&quot;:386,&quot;ctrlKey&quot;:false,&quot;metaKey&quot;:false,&quot;relativeX&quot;:30,&quot;relativeY&quot;:19,&quot;shiftKey&quot;:false,&quot;type&quot;:1}]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <cz.etnetera.jmeter.timer.sampler.ThinkTime guiclass="cz.etnetera.jmeter.timer.sampler.gui.ThinkTimeGui" testclass="cz.etnetera.jmeter.timer.sampler.ThinkTime" testname="ThinkTime" enabled="true">
          <stringProp name="ThinkTime.duration">0</stringProp>
          <boolProp name="ThinkTime.random">true</boolProp>
          <stringProp name="ThinkTime.min">75</stringProp>
          <stringProp name="ThinkTime.max">125</stringProp>
        </cz.etnetera.jmeter.timer.sampler.ThinkTime>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="004_add new" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="023 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;6&quot;,&quot;com.vaadin.shared.ui.button.ButtonServerRpc&quot;,&quot;click&quot;,[{&quot;altKey&quot;:false,&quot;button&quot;:&quot;LEFT&quot;,&quot;clientX&quot;:371,&quot;clientY&quot;:65,&quot;ctrlKey&quot;:false,&quot;metaKey&quot;:false,&quot;relativeX&quot;:92,&quot;relativeY&quot;:28,&quot;shiftKey&quot;:false,&quot;type&quot;:1}]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="024 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;&quot;,[]]],[&quot;${vaadin.cid.20}&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;Smart&quot;,5]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="025 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.21}&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;Meter&quot;,5]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="026 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.22}&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;s&quot;,1]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="027 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.22}&quot;,&quot;com.vaadin.shared.ui.textfield.AbstractTextFieldServerRpc&quot;,&quot;setText&quot;,[&quot;s@m&quot;,3]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="028 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.23}&quot;,&quot;com.vaadin.shared.data.selection.SelectionServerRpc&quot;,&quot;select&quot;,[&quot;4&quot;]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="029 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;11/9/20&quot;,{&quot;YEAR&quot;:2020,&quot;MONTH&quot;:11,&quot;DAY&quot;:9}]],[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;update&quot;,[null,[]]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="030 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;${vaadin.cid.25}&quot;,&quot;com.vaadin.shared.ui.datefield.AbstractDateFieldServerRpc&quot;,&quot;updateValueWithDelay&quot;,[&quot;11/9/20&quot;,{&quot;YEAR&quot;:2020,&quot;MONTH&quot;:11,&quot;DAY&quot;:9}]],[&quot;${vaadin.cid.27}&quot;,&quot;com.vaadin.shared.ui.button.ButtonServerRpc&quot;,&quot;click&quot;,[{&quot;altKey&quot;:false,&quot;button&quot;:&quot;LEFT&quot;,&quot;clientX&quot;:1364,&quot;clientY&quot;:385,&quot;ctrlKey&quot;:false,&quot;metaKey&quot;:false,&quot;relativeX&quot;:39,&quot;relativeY&quot;:18,&quot;shiftKey&quot;:false,&quot;type&quot;:1}]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <cz.etnetera.jmeter.timer.sampler.ThinkTime guiclass="cz.etnetera.jmeter.timer.sampler.gui.ThinkTimeGui" testclass="cz.etnetera.jmeter.timer.sampler.ThinkTime" testname="ThinkTime" enabled="true">
          <stringProp name="ThinkTime.duration">0</stringProp>
          <boolProp name="ThinkTime.random">true</boolProp>
          <stringProp name="ThinkTime.min">75</stringProp>
          <stringProp name="ThinkTime.max">125</stringProp>
        </cz.etnetera.jmeter.timer.sampler.ThinkTime>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="005_cancel filter" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="031 /UIDL/" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:[[&quot;5&quot;,&quot;com.vaadin.shared.ui.button.ButtonServerRpc&quot;,&quot;click&quot;,[{&quot;altKey&quot;:false,&quot;button&quot;:&quot;LEFT&quot;,&quot;clientX&quot;:253,&quot;clientY&quot;:58,&quot;ctrlKey&quot;:false,&quot;metaKey&quot;:false,&quot;relativeX&quot;:32,&quot;relativeY&quot;:21,&quot;shiftKey&quot;:false,&quot;type&quot;:1}]]],&quot;syncId&quot;:${vaadin.syncId},&quot;clientId&quot;:${vaadin.clientId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/UIDL/?v-uiId=${vaadin.uiId}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.syncId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.syncId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;syncId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <cz.etnetera.jmeter.extractor.BoundaryExtractor guiclass="cz.etnetera.jmeter.extractor.gui.BoundaryExtractorGui" testclass="cz.etnetera.jmeter.extractor.BoundaryExtractor" testname="vaadin.clientId" enabled="true">
              <stringProp name="BoundaryExtractor.use_field">body</stringProp>
              <stringProp name="BoundaryExtractor.occurrence">LAST</stringProp>
              <stringProp name="BoundaryExtractor.ref_name">vaadin.clientId</stringProp>
              <stringProp name="BoundaryExtractor.lb">&quot;clientId&quot;: </stringProp>
              <stringProp name="BoundaryExtractor.rb">,</stringProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              <stringProp name="BoundaryExtractor.default">f!</stringProp>
              <stringProp name="BoundaryExtractor.source_variable_name"></stringProp>
            </cz.etnetera.jmeter.extractor.BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://localhost:8080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:8080/</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) SmartMeter.ioRecorder/1.2.17 Chrome/69.0.3497.128 Electron/4.2.12 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <cz.etnetera.jmeter.timer.sampler.ThinkTime guiclass="cz.etnetera.jmeter.timer.sampler.gui.ThinkTimeGui" testclass="cz.etnetera.jmeter.timer.sampler.ThinkTime" testname="ThinkTime" enabled="true">
          <stringProp name="ThinkTime.duration">0</stringProp>
          <boolProp name="ThinkTime.random">true</boolProp>
          <stringProp name="ThinkTime.min">75</stringProp>
          <stringProp name="ThinkTime.max">125</stringProp>
        </cz.etnetera.jmeter.timer.sampler.ThinkTime>
        <hashTree/>
      </hashTree>
      <cz.etnetera.jmeter.listener.ControllerResultCollector guiclass="cz.etnetera.jmeter.listener.ControllerSummaryReport" testclass="cz.etnetera.jmeter.listener.ControllerResultCollector" testname="Controller Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">results/20201110-162356-vaadin-3-report.jtl</stringProp>
      </cz.etnetera.jmeter.listener.ControllerResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <cz.etnetera.jmeter.listener.SynchronizedPerfMonCollector guiclass="cz.etnetera.jmeter.listener.gui.SynchronizedPerfMonGui" testclass="cz.etnetera.jmeter.listener.SynchronizedPerfMonCollector" testname="Local PerfMon" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="917676733">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600767">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1383037588">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600767">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </cz.etnetera.jmeter.listener.SynchronizedPerfMonCollector>
      <hashTree/>
      <cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel guiclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGui" testclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel" testname="EXAMPLE Criterion Response &lt; 2 sec" enabled="true">
        <stringProp name="source">TRANSACTIONS</stringProp>
        <stringProp name="metric">RESPONSE_TIME</stringProp>
        <stringProp name="sourceListenerName"></stringProp>
        <stringProp name="filterFun">ALL</stringProp>
        <stringProp name="filterValue"></stringProp>
        <boolProp name="groupByName">true</boolProp>
        <stringProp name="sliceSize">10</stringProp>
        <stringProp name="aggregationFun">AVG</stringProp>
        <stringProp name="aggregationArgument"></stringProp>
        <boolProp name="comparisonFailIfEmpty">false</boolProp>
        <stringProp name="comparisonFun">LESS_THAN_OR_EQUAL</stringProp>
        <stringProp name="comparisonThreshold">2000</stringProp>
      </cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel>
      <hashTree/>
      <cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel guiclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGui" testclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel" testname="EXAMPLE Criterion No Errors" enabled="true">
        <stringProp name="source">TRANSACTIONS</stringProp>
        <stringProp name="metric">ERRORS</stringProp>
        <stringProp name="sourceListenerName"></stringProp>
        <stringProp name="filterFun">ALL</stringProp>
        <stringProp name="filterValue"></stringProp>
        <boolProp name="groupByName">false</boolProp>
        <stringProp name="sliceSize"></stringProp>
        <stringProp name="aggregationFun">SUM</stringProp>
        <stringProp name="aggregationArgument"></stringProp>
        <boolProp name="comparisonFailIfEmpty">false</boolProp>
        <stringProp name="comparisonFun">EQUALS</stringProp>
        <stringProp name="comparisonThreshold">0</stringProp>
      </cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel>
      <hashTree/>
      <cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel guiclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGui" testclass="cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel" testname="EXAMPLE Criterion CPU &lt; 75" enabled="true">
        <stringProp name="source">PERFMON</stringProp>
        <stringProp name="metric">CPU</stringProp>
        <stringProp name="sourceListenerName">Local PerfMon</stringProp>
        <stringProp name="filterFun">ALL</stringProp>
        <stringProp name="filterValue"></stringProp>
        <boolProp name="groupByName">false</boolProp>
        <stringProp name="sliceSize">10</stringProp>
        <stringProp name="aggregationFun">AVG</stringProp>
        <stringProp name="aggregationArgument"></stringProp>
        <boolProp name="comparisonFailIfEmpty">false</boolProp>
        <stringProp name="comparisonFun">LESS_THAN_OR_EQUAL</stringProp>
        <stringProp name="comparisonThreshold">75</stringProp>
      </cz.etnetera.jmeter.acceptance.gui.AcceptanceCriterionGuiModel>
      <hashTree/>
      <ResultCollector guiclass="cz.etnetera.jmeter.listener.RecordingLog" testclass="ResultCollector" testname="Recording log" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">vaadin-3.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
